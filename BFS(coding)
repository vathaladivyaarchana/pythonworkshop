{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/vathaladivyaarchana/pythonworkshop/blob/main/BFS(coding)\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "ZmDwhBp2OOkS",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 571
        },
        "outputId": "872214af-91eb-420a-8223-f27a56f65c6b"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Edges of the graph: [('a', 'b'), ('a', 'f'), ('b', 'c'), ('b', 'e'), ('c', 'f'), ('d', 'g'), ('d', 'h'), ('g', 'h')]\n",
            "Nodes of the graph: ['a', 'b', 'c', 'e', 'f', 'd', 'g', 'h']\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "import networkx as nx\n",
        "\n",
        "# Create an empty undirected graph\n",
        "G = nx.Graph()\n",
        "\n",
        "# Add edges to the graph\n",
        "G.add_edges_from([('a', 'b'), ('b', 'c'), ('b', 'e'), ('a', 'f'), ('c', 'f'), ('d', 'g'), ('d', 'h'), ('g', 'h')])\n",
        "\n",
        "# To check the edges\n",
        "print(\"Edges of the graph:\", list(G.edges))\n",
        "\n",
        "# To check the nodes\n",
        "print(\"Nodes of the graph:\", list(G.nodes))\n",
        "\n",
        "nx.draw_circular(G, with_labels=True)\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Perform DFS and get the nodes in depth-first order\n",
        "dfs_nodes = list(nx.dfs_preorder_nodes(G, source='a'))\n",
        "\n",
        "print(\"DFS Nodes in order:\", dfs_nodes)\n",
        "\n",
        "# Perform DFS and get the edges in depth-first order\n",
        "dfs_edges = list(nx.dfs_edges(G, source='a'))\n",
        "\n",
        "print(\"DFS Edges in order:\", dfs_edges)"
      ],
      "metadata": {
        "id": "HTkZO-dyQzXq",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "6a29d9a2-1b39-4608-c03d-f3464d02a857"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "DFS Nodes in order: ['a', 'b', 'c', 'f', 'e']\n",
            "DFS Edges in order: [('a', 'b'), ('b', 'c'), ('c', 'f'), ('b', 'e')]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Draw the graph with DFS edges highlighted\n",
        "pos = nx.spring_layout(G)  # Generate layout\n",
        "nx.draw(G, pos, with_labels=True, node_color='lightblue')\n",
        "\n",
        "# Highlight DFS edges in red\n",
        "nx.draw_networkx_edges(G, pos, edgelist=dfs_edges, edge_color='r', width=2)\n"
      ],
      "metadata": {
        "id": "GtJKvUZ7PrLA",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 533
        },
        "outputId": "cf9c3d9e-690a-4b22-fc82-c7b386ab1d44"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.collections.LineCollection at 0x7ea484746f20>"
            ]
          },
          "metadata": {},
          "execution_count": 23
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "visited = []\n",
        "num_connected_comp = 0\n",
        "for node in G.nodes():\n",
        "  if node not in visited:\n",
        "    num_connected_comp += 1\n",
        "    # Perform DFS and get the nodes in depth-first order\n",
        "    dfs_nodes = list(nx.dfs_preorder_nodes(G, source=node))\n",
        "    print('Connected component', num_connected_comp, dfs_nodes)\n",
        "    #add the visited nodes to \"visited\"\n",
        "    visited += dfs_nodes\n",
        "\n",
        "#print(visited)"
      ],
      "metadata": {
        "id": "gep7g0kvQ-lD",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "3ba209c4-bc70-4f2d-9a6d-27623eb4dfac"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Connected component 1 ['a', 'b', 'c', 'f', 'e']\n",
            "Connected component 2 ['d', 'g', 'h']\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Perform BFS and get the nodes in breadth-first order\n",
        "bfs_nodes = list(nx.bfs_tree(G, source='a'))\n",
        "print(\"BFS Nodes in order:\", bfs_nodes)\n",
        "\n",
        "# Perform BFS and get the edges in breadth-first order\n",
        "bfs_edges = list(nx.bfs_edges(G, source='a'))\n",
        "print(\"BFS Edges in order:\", bfs_edges)\n",
        "\n",
        "# Draw the graph with BFS edges highlighted\n",
        "nx.draw(G, pos, with_labels=True, node_color='lightgreen')\n",
        "nx.draw_networkx_edges(G, pos, edgelist=bfs_edges, edge_color='orange', width=2)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "sgeeeOiDnIkf",
        "outputId": "803d8b63-6eeb-4363-bdea-12bfe9796331",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 551
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "BFS Nodes in order: ['a', 'b', 'f', 'c', 'e']\n",
            "BFS Edges in order: [('a', 'b'), ('a', 'f'), ('b', 'c'), ('b', 'e')]\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}